class Solution:
    def rotateTheBox(self, box: List[List[str]]) -> List[List[str]]:
        R = len(box)
        C = len(box[0])
        ans = [["."]*R for _ in range(C)]
        '''
        
        go row by row in the original box
        first row becomes last column
        for each row r, 
            record indices of stones and obstacles
            for each obstacle
                go through and record the number of stones that are before the obstacle
                turn ans[i-numstones:i][R-r-i] into stones
            put the remaining stones on the ground (ans[C-numstones:C])
        '''

        
        for r in range(R):
            stones = []
            obstacles = []
            for i, obj in enumerate(box[r]):
                if obj == '#':
                    stones.append(i)
                elif obj == '*':
                    obstacles.append(i)
            stoneslen = len(stones)
            s = 0
            for obstacle in obstacles:
                ans[obstacle][R-r-1] = '*'
                numstones = 0
                while s < stoneslen and stones[s] < obstacle:
                    numstones += 1
                    s += 1
                for ss in range(1, numstones+1):
                    ans[obstacle-ss][R-r-1]= '#'
            remaining_stones = stoneslen-s 
            for ss in range(1, remaining_stones+1):
                ans[C-ss][R-r-1]= '#'
            
        return ans
                    
                    
