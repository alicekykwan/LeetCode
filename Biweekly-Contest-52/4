class Solution:
    def sumOfFlooredPairs(self, nums: List[int]) -> int:
        '''        
        count how many nums are below a limit x
        '''
        nums.sort()
        limit = max(nums)
        n = len(nums)
        i = 0
        ctbelow = [0] * (limit + 2)
        for j in range(2, limit + 2):
            ct = 0
            while i < n and nums[i] < j:
                ct += 1
                i += 1
            ctbelow[j] = ctbelow[j-1] + ct
        
        ans = 0
        c = Counter(nums)
        for num, copies in c.items():
            maxfloor = limit//num
            for i in range(1, maxfloor+1):
                numerator_upper = min(limit+1, (i+1)*num)
                numerator_lower = i*num
                ct = ctbelow[numerator_upper] - ctbelow[numerator_lower]
                ans += ct*i*copies
                ans %= 10**9 + 7
        
        return ans
